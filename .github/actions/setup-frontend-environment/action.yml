name: Setup frontend environment
description: Setup frontend environment with optimized caching

inputs:
  node-version:
    description: node version
    default: "18"
    required: false
  yarn-version:
    description: yarn version
    default: "1.22"
    required: false
  directory:
    description: frontend directory
    default: "web"
    required: false

runs:
  using: composite
  steps:
    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: "${{ inputs.node-version }}"
        cache: 'yarn'

    - name: Upgrade Yarn
      env:
        VERSION: "${{ inputs.yarn-version }}"
      shell: bash
      run: npm install -g "yarn@${VERSION}"

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      shell: bash
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

    - name: Configure yarn cache
      uses: actions/cache@v4
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          ${{ inputs.directory }}/node_modules
          ${{ inputs.directory }}/.yarn/cache
          ${{ inputs.directory }}/.yarn/unplugged
        key: ${{ runner.os }}-node-${{ inputs.node-version }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ inputs.node-version }}-

    - name: Install yarn dependencies
      working-directory: "${{ inputs.directory }}"
      shell: bash
      run: |
        yarn install --frozen-lockfile --prefer-offline --network-timeout 300000

    - name: Configure NX cache
      uses: actions/cache@v4
      with:
        path: |
          ${{ inputs.directory }}/.nx/cache
          ${{ inputs.directory }}/.nx/daemon
        key: nx-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          nx-cache-${{ runner.os }}-
