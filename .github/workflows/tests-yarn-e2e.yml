name: "yarn e2e"

on:
  workflow_call:
    inputs:
      head_sha:
        required: true
        type: string

env:
  NODE: "18"
  FRONTEND_MONOREPO_DIR: "web"

jobs:
  main:
    name: "yarn e2e"
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: hmarr/debug-action@v3.0.0

      - name: Configure git
        shell: bash
        run: |
          set -xeuo pipefail
          git config --global user.name 'robot-ci-heartex'
          git config --global user.email 'robot-ci-heartex@users.noreply.github.com'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      - name: Setup frontend environment
        uses: ./.github/actions/setup-frontend-environment
        with:
          node-version: "${{ env.NODE }}"
          directory: "${{ env.FRONTEND_MONOREPO_DIR }}"

      - name: Build editor
        working-directory: ${{ env.FRONTEND_MONOREPO_DIR }}
        env:
          NODE_ENV: production
          BUILD_NO_MINIMIZATION: true
          NX_VERBOSE_LOGGING: true
        run: |
          yarn nx run editor:build:production --parallel=3

      - name: Install e2e dependencies
        working-directory: ${{ env.FRONTEND_MONOREPO_DIR }}/libs/editor/tests/e2e
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Serve built editor
        uses: ./.github/actions/serve-frontend
        with:
          directory: ${{ env.FRONTEND_MONOREPO_DIR }}/dist/libs/editor

      - name: Run tests
        working-directory: ${{ env.FRONTEND_MONOREPO_DIR }}
        env:
          HEADLESS: true
          CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/.cypress-cache
        run: |
          yarn test:e2e --parallel

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e output
          path: "web/libs/editor/tests/e2e/output"

      - name: Kill server
        if: always()
        continue-on-error: true
        run: kill -9 "${{ steps.serve.outputs.pid }}"
